{
  
    
        "post0": {
            "title": "KERRY MATRIX",
            "content": "#collapse #IMPORTS import pandas as pd from matplotlib import pyplot as plt rtData = pd.read_csv(&#39;https://d14wlfuexuxgcm.cloudfront.net/covid/rt.csv&#39;) dailyData = pd.read_csv(&#39;https://covidtracking.com/api/v1/states/daily.csv&#39;) #SET VARIABLES today = &#39;2020-08-02&#39; week = &#39;2020-08-02/2020-07-26&#39; dateRange = &#39;20200802&#39; #KERRY LOCATIONS AND POPULATION DATA kerryLocations = pd.read_csv(&#39;../kerry.csv&#39;) kerryLocations.columns = map(str.lower, kerryLocations.columns) kerryCols=[&#39;state&#39;, &#39;population&#39;] kerryLocs = kerryLocations[kerryCols] print (&#39;Kerry Locations Information being loaded...&#39;) kerryLocs . . Kerry Locations Information being loaded... . state population . 0 AL | 4903185 | . 1 AR | 3017804 | . 2 CA | 39512223 | . 3 FL | 21477737 | . 4 GA | 10617423 | . 5 IA | 3155070 | . 6 IL | 12671821 | . 7 IN | 6732219 | . 8 KS | 2913314 | . 9 MD | 6045680 | . 10 ME | 1344212 | . 11 MN | 5639632 | . 12 MO | 6137428 | . 13 MS | 2976149 | . 14 NJ | 8882190 | . 15 NY | 19453561 | . 16 OH | 11689100 | . 17 TN | 6829174 | . 18 TX | 28995881 | . 19 VA | 8535519 | . 20 WA | 7614893 | . 21 WI | 5822434 | . #collapse #rtlive data cleaning rtCleaned = rtData[rtData[&#39;date&#39;]==today] rtColumns = [&#39;date&#39;, &#39;region&#39;, &#39;mean&#39;] rtCleaned = rtCleaned[rtColumns] rtCleaned = rtCleaned.rename(columns = {&#39;region&#39;:&#39;state&#39;}) rtCleaned = rtCleaned.sort_values(&#39;state&#39;, ascending=True) . . #PRINT CLEANED DATA print (&#39;rtLive Data being loaded...&#39;) rtCleaned . rtLive Data being loaded... . date state mean . 7999 2020-08-02 | AK | 1.044038 | . 3674 2020-08-02 | AL | 1.038194 | . 4947 2020-08-02 | AR | 1.032027 | . 7165 2020-08-02 | AZ | 0.868990 | . 7844 2020-08-02 | CA | 0.887025 | . 6379 2020-08-02 | CO | 0.998260 | . 952 2020-08-02 | CT | 0.981955 | . 2076 2020-08-02 | DC | 1.038579 | . 1594 2020-08-02 | DE | 0.946947 | . 2723 2020-08-02 | FL | 0.963125 | . 2560 2020-08-02 | GA | 0.951249 | . 8158 2020-08-02 | HI | 1.344259 | . 4631 2020-08-02 | IA | 0.987130 | . 6845 2020-08-02 | ID | 1.008629 | . 3997 2020-08-02 | IL | 1.079792 | . 3353 2020-08-02 | IN | 1.003324 | . 5740 2020-08-02 | KS | 1.064063 | . 2884 2020-08-02 | KY | 1.051189 | . 5106 2020-08-02 | LA | 0.911052 | . 629 2020-08-02 | MA | 1.045733 | . 1756 2020-08-02 | MD | 1.031470 | . 153 2020-08-02 | ME | 0.935425 | . 3519 2020-08-02 | MI | 0.990569 | . 4316 2020-08-02 | MN | 1.104105 | . 4791 2020-08-02 | MO | 1.162356 | . 4472 2020-08-02 | MS | 1.070742 | . 6691 2020-08-02 | MT | 1.044862 | . 2238 2020-08-02 | NC | 1.014149 | . 5262 2020-08-02 | ND | 1.091882 | . 5580 2020-08-02 | NE | 1.109083 | . 313 2020-08-02 | NH | 1.012778 | . 1276 2020-08-02 | NJ | 0.973840 | . 6217 2020-08-02 | NM | 0.926463 | . 7682 2020-08-02 | NV | 1.090898 | . 1115 2020-08-02 | NY | 0.962816 | . 3193 2020-08-02 | OH | 0.941024 | . 5898 2020-08-02 | OK | 0.995248 | . 7525 2020-08-02 | OR | 1.072128 | . 1437 2020-08-02 | PA | 0.977182 | . 792 2020-08-02 | RI | 1.141209 | . 2399 2020-08-02 | SC | 0.905029 | . 5419 2020-08-02 | SD | 1.119219 | . 3834 2020-08-02 | TN | 0.984245 | . 6060 2020-08-02 | TX | 0.956087 | . 7003 2020-08-02 | UT | 1.014811 | . 1916 2020-08-02 | VA | 1.095967 | . 474 2020-08-02 | VT | 0.838499 | . 7364 2020-08-02 | WA | 1.089897 | . 4155 2020-08-02 | WI | 0.917461 | . 3034 2020-08-02 | WV | 0.951932 | . 6535 2020-08-02 | WY | 1.006348 | . #collapse #DAILY DATA CLEANING dailyColumns = [&#39;date&#39;, &#39;state&#39;, &#39;death&#39;, &#39;positiveIncrease&#39;, &#39;totalTestResultsIncrease&#39;, &#39;deathIncrease&#39;] dailyData = dailyData[dailyColumns] dailyData = dailyData.sort_values(&#39;state&#39;, ascending=True) dailyCleaned = dailyData[dailyData[&#39;date&#39;].astype(str)==dateRange] dailyCleaned . . date state death positiveIncrease totalTestResultsIncrease deathIncrease . 168 20200802 | AK | 24.0 | 157 | 4457 | 0 | . 169 20200802 | AL | 1627.0 | 2095 | 8699 | 24 | . 170 20200802 | AR | 458.0 | 0 | 0 | -2 | . 171 20200802 | AS | 0.0 | 0 | 0 | 0 | . 172 20200802 | AZ | 3765.0 | 1465 | 7778 | 18 | . 173 20200802 | CA | 9356.0 | 9032 | 149388 | 132 | . 174 20200802 | CO | 1691.0 | 458 | 7169 | 0 | . 175 20200802 | CT | 4432.0 | 0 | 0 | 0 | . 176 20200802 | DC | 586.0 | 69 | 3411 | 1 | . 177 20200802 | DE | 585.0 | 72 | 2015 | 0 | . 178 20200802 | FL | 7206.0 | 7104 | 41554 | 62 | . 179 20200802 | GA | 3840.0 | 3165 | 28555 | 15 | . 180 20200802 | GU | 5.0 | 0 | 0 | 0 | . 181 20200802 | HI | 26.0 | 86 | 3390 | 0 | . 182 20200802 | IA | 876.0 | 516 | 5148 | 4 | . 183 20200802 | ID | 197.0 | 393 | 2426 | 8 | . 184 20200802 | IL | 7714.0 | 1467 | 38945 | 14 | . 185 20200802 | IN | 2975.0 | 735 | 10437 | 4 | . 186 20200802 | KS | 358.0 | 0 | 0 | 0 | . 187 20200802 | KY | 742.0 | 462 | 462 | 2 | . 188 20200802 | LA | 4007.0 | 3467 | 37197 | 58 | . 189 20200802 | MA | 8638.0 | 418 | 13377 | 12 | . 190 20200802 | MD | 3515.0 | 909 | 15432 | 9 | . 191 20200802 | ME | 123.0 | 21 | 2328 | 0 | . 192 20200802 | MI | 6457.0 | 429 | 25011 | 0 | . 193 20200802 | MN | 1654.0 | 759 | 12073 | 8 | . 194 20200802 | MO | 1253.0 | 582 | 5722 | 0 | . 195 20200802 | MP | 2.0 | 3 | 3 | 0 | . 196 20200802 | MS | 1703.0 | 672 | 672 | 10 | . 197 20200802 | MT | 61.0 | 112 | 2742 | 0 | . 198 20200802 | NC | 1969.0 | 1341 | 27098 | 5 | . 199 20200802 | ND | 95.0 | 0 | 0 | 0 | . 200 20200802 | NE | 332.0 | 180 | 1984 | 0 | . 201 20200802 | NH | 416.0 | 0 | 0 | 0 | . 202 20200802 | NJ | 15836.0 | 321 | 49180 | 6 | . 203 20200802 | NM | 651.0 | 196 | 7874 | 9 | . 204 20200802 | NV | 832.0 | 1131 | 7899 | 0 | . 205 20200802 | NY | 25170.0 | 531 | 58961 | 6 | . 206 20200802 | OH | 3529.0 | 944 | 24643 | 14 | . 207 20200802 | OK | 550.0 | 494 | 494 | 1 | . 208 20200802 | OR | 326.0 | 280 | 4041 | 1 | . 209 20200802 | PA | 7209.0 | 654 | 12247 | 5 | . 210 20200802 | PR | 230.0 | 539 | 539 | 5 | . 211 20200802 | RI | 1007.0 | 0 | 0 | 0 | . 212 20200802 | SC | 1777.0 | 1189 | 10388 | 26 | . 213 20200802 | SD | 135.0 | 88 | 1021 | 1 | . 214 20200802 | TN | 1073.0 | 1443 | 19445 | 6 | . 215 20200802 | TX | 6837.0 | 0 | 0 | 0 | . 216 20200802 | UT | 311.0 | 473 | 3456 | 1 | . 217 20200802 | VA | 2218.0 | 981 | 12665 | 3 | . 218 20200802 | VI | 8.0 | 0 | 0 | 0 | . 219 20200802 | VT | 57.0 | 5 | 1289 | 0 | . 220 20200802 | WA | 1592.0 | 1738 | 27874 | 28 | . 221 20200802 | WI | 955.0 | 932 | 9653 | 1 | . 222 20200802 | WV | 117.0 | 119 | 3988 | 1 | . 223 20200802 | WY | 26.0 | 39 | 39 | 0 | . #collapse #FILTER DATASETS TO KERRY LOCATIONS AND MERGE SETS INTO ONE TABLE startFile=pd.merge(kerryLocs, rtCleaned, on=[&#39;state&#39;]) print (&#39;Kerry File Building...&#39;) newData=pd.merge(startFile, dailyCleaned, on=[&#39;state&#39;]) newData=newData.rename(columns={&#39;date_x&#39;:&#39;date&#39;}) colss = [&#39;date&#39;, &#39;state&#39;, &#39;population&#39;, &#39;mean&#39;, &#39;death&#39;, &#39;positiveIncrease&#39;, &#39;totalTestResultsIncrease&#39;, &#39;deathIncrease&#39;] newData[colss].head(50) . . Kerry File Building... . date state population mean death positiveIncrease totalTestResultsIncrease deathIncrease . 0 2020-08-02 | AL | 4903185 | 1.038194 | 1627.0 | 2095 | 8699 | 24 | . 1 2020-08-02 | AR | 3017804 | 1.032027 | 458.0 | 0 | 0 | -2 | . 2 2020-08-02 | CA | 39512223 | 0.887025 | 9356.0 | 9032 | 149388 | 132 | . 3 2020-08-02 | FL | 21477737 | 0.963125 | 7206.0 | 7104 | 41554 | 62 | . 4 2020-08-02 | GA | 10617423 | 0.951249 | 3840.0 | 3165 | 28555 | 15 | . 5 2020-08-02 | IA | 3155070 | 0.987130 | 876.0 | 516 | 5148 | 4 | . 6 2020-08-02 | IL | 12671821 | 1.079792 | 7714.0 | 1467 | 38945 | 14 | . 7 2020-08-02 | IN | 6732219 | 1.003324 | 2975.0 | 735 | 10437 | 4 | . 8 2020-08-02 | KS | 2913314 | 1.064063 | 358.0 | 0 | 0 | 0 | . 9 2020-08-02 | MD | 6045680 | 1.031470 | 3515.0 | 909 | 15432 | 9 | . 10 2020-08-02 | ME | 1344212 | 0.935425 | 123.0 | 21 | 2328 | 0 | . 11 2020-08-02 | MN | 5639632 | 1.104105 | 1654.0 | 759 | 12073 | 8 | . 12 2020-08-02 | MO | 6137428 | 1.162356 | 1253.0 | 582 | 5722 | 0 | . 13 2020-08-02 | MS | 2976149 | 1.070742 | 1703.0 | 672 | 672 | 10 | . 14 2020-08-02 | NJ | 8882190 | 0.973840 | 15836.0 | 321 | 49180 | 6 | . 15 2020-08-02 | NY | 19453561 | 0.962816 | 25170.0 | 531 | 58961 | 6 | . 16 2020-08-02 | OH | 11689100 | 0.941024 | 3529.0 | 944 | 24643 | 14 | . 17 2020-08-02 | TN | 6829174 | 0.984245 | 1073.0 | 1443 | 19445 | 6 | . 18 2020-08-02 | TX | 28995881 | 0.956087 | 6837.0 | 0 | 0 | 0 | . 19 2020-08-02 | VA | 8535519 | 1.095967 | 2218.0 | 981 | 12665 | 3 | . 20 2020-08-02 | WA | 7614893 | 1.089897 | 1592.0 | 1738 | 27874 | 28 | . 21 2020-08-02 | WI | 5822434 | 0.917461 | 955.0 | 932 | 9653 | 1 | . #collapse read = pd.read_csv(&#39;../us_m.csv&#39;) read=read.rename(columns={&#39;State&#39;:&#39;state&#39;}) filler=[&#39;state&#39;,&#39;Social Index Current&#39;, &#39;Change in SD index&#39;, &#39;SD Past&#39;, &#39;Rt Current&#39;, &#39;Rt Past&#39;, &#39;Change in Rt&#39;, &#39;Stratified Rt&#39;, &#39;tests per case&#39;, &#39;Test Increase Current&#39;, &#39;Change in Pos Test Increase&#39;, &#39;Increase in Pos Tests Past&#39;, &#39;Per Capita Positive Tests (July 07 - July 13) per 100K&#39;, &#39;TPR Current&#39;, &#39;Change in Test Positive Rate&#39;, &#39;TPR Past&#39;, &#39;Stratified Test Positive Rate&#39;, &#39;Outbreak Index&#39;, &#39;Weekly Deaths Current&#39;, &#39;Change in Weekly Deaths&#39;, &#39;Weekly Deaths Past&#39;, &#39;Weekly Death Rate per 100K Population&#39;, &#39;Total Deaths Current&#39;, &#39;Change in Total Deaths&#39;, &#39;Total Deaths Past&#39;, &#39;Cumulative Death Rate per 100K&#39;, &#39;Total Tests Current&#39;, &#39;Change in Total Tests&#39;, &#39;Total Tests Past&#39;, &#39;Tests per 100K Population&#39;] read=read[filler] readMerge=pd.merge(read, newData, on=&#39;state&#39;) readMerge.head(50) . . state Social Index Current Change in SD index SD Past Rt Current Rt Past Change in Rt Stratified Rt tests per case Test Increase Current ... Total Tests Past Tests per 100K Population population date mean date_y death positiveIncrease totalTestResultsIncrease deathIncrease . 0 AL | 22 | -7 | 29 | 1.111944 | 1.111944 | 0 | #REF! | 14.889303 | 11546 | ... | 56092 | 1144 | 4903185 | 2020-08-02 | 1.038194 | 20200802 | 1627.0 | 2095 | 8699 | 24 | . 1 AR | 76 | 50 | 26 | 1.037065 | 1.037065 | 0 | #REF! | 32.629213 | 5150 | ... | 42509 | 1409 | 3017804 | 2020-08-02 | 1.032027 | 20200802 | 458.0 | 0 | 0 | -2 | . 2 CA | 22 | -15 | 37 | 0.970088 | 0.970088 | 0 | #REF! | 18.597675 | 54351 | ... | 888118 | 2248 | 39512223 | 2020-08-02 | 0.887025 | 20200802 | 9356.0 | 9032 | 149388 | 132 | . 3 FL | 85 | 51 | 34 | 0.986019 | 0.986019 | 0 | #REF! | 21.515181 | 59137 | ... | 321301 | 1496 | 21477737 | 2020-08-02 | 0.963125 | 20200802 | 7206.0 | 7104 | 41554 | 62 | . 4 GA | 22 | -8 | 30 | 0.953783 | 0.953783 | 0 | #REF! | 12.918055 | 24592 | ... | 193438 | 1822 | 10617423 | 2020-08-02 | 0.951249 | 20200802 | 3840.0 | 3165 | 28555 | 15 | . 5 IA | 16 | -9 | 25 | 1.010162 | 1.010162 | 0 | #REF! | 6.070516 | 3287 | ... | 31630 | 1003 | 3155070 | 2020-08-02 | 0.987130 | 20200802 | 876.0 | 516 | 5148 | 4 | . 6 IL | 44 | 17 | 27 | 1.092876 | 1.092876 | 0 | #REF! | 6.080535 | 10625 | ... | 264702 | 2089 | 12671821 | 2020-08-02 | 1.079792 | 20200802 | 7714.0 | 1467 | 38945 | 14 | . 7 IN | 54 | 29 | 25 | 1.001587 | 1.001587 | 0 | #REF! | 6.380463 | 5526 | ... | 67691 | 1005 | 6732219 | 2020-08-02 | 1.003324 | 20200802 | 2975.0 | 735 | 10437 | 4 | . 8 KS | 46 | 19 | 27 | 1.071201 | 1.071201 | 0 | #REF! | 6.923400 | 2704 | ... | 22903 | 786 | 2913314 | 2020-08-02 | 1.064063 | 20200802 | 358.0 | 0 | 0 | 0 | . 9 MD | 45 | 12 | 33 | 1.047616 | 1.047616 | 0 | #REF! | 4.486504 | 6268 | ... | 105119 | 1739 | 6045680 | 2020-08-02 | 1.031470 | 20200802 | 3515.0 | 909 | 15432 | 9 | . 10 ME | 45 | 21 | 24 | 0.975832 | 0.975832 | 0 | #REF! | 11.834043 | 138 | ... | 16704 | 1243 | 1344212 | 2020-08-02 | 0.935425 | 20200802 | 123.0 | 21 | 2328 | 0 | . 11 MN | 45 | 16 | 29 | 1.074376 | 1.074376 | 0 | #REF! | 6.418775 | 4757 | ... | -98722 | -1751 | 5639632 | 2020-08-02 | 1.104105 | 20200802 | 1654.0 | 759 | 12073 | 8 | . 12 MO | 1 | -25 | 26 | 1.220294 | 1.220294 | 0 | #REF! | 12.892074 | 9837 | ... | 71044 | 1158 | 6137428 | 2020-08-02 | 1.162356 | 20200802 | 1253.0 | 582 | 5722 | 0 | . 13 MS | 13 | -17 | 30 | 1.061724 | 1.061724 | 0 | #REF! | 7.721539 | 8168 | ... | 35120 | 1180 | 2976149 | 2020-08-02 | 1.070742 | 20200802 | 1703.0 | 672 | 672 | 10 | . 14 NJ | 15 | -17 | 32 | 0.965851 | 0.965851 | 0 | #REF! | 2.986051 | 2802 | ... | 180739 | 2035 | 8882190 | 2020-08-02 | 0.973840 | 20200802 | 15836.0 | 321 | 49180 | 6 | . 15 NY | 52 | 13 | 39 | 0.941746 | 0.941746 | 0 | #REF! | 8.131632 | 4499 | ... | 455625 | 2342 | 19453561 | 2020-08-02 | 0.962816 | 20200802 | 25170.0 | 531 | 58961 | 6 | . 16 OH | 64 | 38 | 26 | 0.918456 | 0.918456 | 0 | #REF! | 10.275097 | 8786 | ... | 191445 | 1638 | 11689100 | 2020-08-02 | 0.941024 | 20200802 | 3529.0 | 944 | 24643 | 14 | . 17 TN | 15 | -11 | 26 | 0.980140 | 0.980140 | 0 | #REF! | 17.465635 | 14147 | ... | 163081 | 2388 | 6829174 | 2020-08-02 | 0.984245 | 20200802 | 1073.0 | 1443 | 19445 | 6 | . 18 TX | 35 | -1 | 36 | 0.933380 | 0.933380 | 0 | #REF! | 17.097357 | 56091 | ... | 405704 | 1399 | 28995881 | 2020-08-02 | 0.956087 | 20200802 | 6837.0 | 0 | 0 | 0 | . 19 VA | 85 | 55 | 30 | 1.023291 | 1.023291 | 0 | #REF! | 5.528127 | 7034 | ... | 115897 | 1358 | 8535519 | 2020-08-02 | 1.095967 | 20200802 | 2218.0 | 981 | 12665 | 3 | . 20 WA | 25 | -5 | 30 | 1.012360 | 1.012360 | 0 | #REF! | 20.170572 | 5538 | ... | 88933 | 1168 | 7614893 | 2020-08-02 | 1.089897 | 20200802 | 1592.0 | 1738 | 27874 | 28 | . 21 WI | 26 | 0 | 26 | 0.985503 | 0.985503 | 0 | #REF! | 11.013130 | 6120 | ... | 93650 | 1608 | 5822434 | 2020-08-02 | 0.917461 | 20200802 | 955.0 | 932 | 9653 | 1 | . 22 rows × 38 columns . #collapse #chart over time fig, ax = plt.subplots(figsize=(10,5)) dailyData.death.plot(c=&quot;g&quot;, label=&quot;Test-adjusted&quot;) dailyData.positiveIncrease.plot(c=&quot;g&quot;, alpha=.5, label=&quot;Test-adjusted (raw)&quot;, style=&quot;--&quot;) dailyData.deathIncrease.plot(c=&quot;b&quot;, label=&quot;Infections&quot;) fig.set_facecolor(&#39;w&#39;) ax.legend(); . .",
            "url": "https://richcastro82.github.io/Matrix/jupyter/2020/08/05/USM.html",
            "relUrl": "/jupyter/2020/08/05/USM.html",
            "date": " • Aug 5, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "#collapse #IMPORTING LIBRARIES AND DATA FILES import pandas as pd mat=pd.read_csv(&#39;us_m.csv&#39;) kerry=pd.read_csv(&#39;kerry.csv&#39;) rt = pd.read_csv(&#39;https://d14wlfuexuxgcm.cloudfront.net/covid/rt.csv&#39;) da = pd.read_csv(&#39;https://covidtracking.com/api/v1/states/daily.csv&#39;) . . #collapse #FORMATING DATA FROM LAST WEEKS MATRIX TO MOVE WEEKLY DATA OVER mat.columns = map(str.lower, mat.columns) col=[&#39;state&#39;,&#39;social index current&#39;,&#39;rt current&#39;,&#39;test increase current&#39;,&#39;tpr current&#39;, &#39;weekly deaths current&#39;,&#39;total deaths current&#39;,&#39;total tests current&#39;] newCol=mat[col] newerCol=newCol.rename(columns={&#39;social index current&#39;:&#39;social index past&#39; ,&#39;rt current&#39;:&#39;rt past&#39; ,&#39;test increase current&#39;:&#39;test increase past&#39;, &#39;tpr current&#39;:&#39;tpr past&#39;, &#39;weekly deaths current&#39;:&#39;weekly deaths past&#39;, &#39;total deaths current&#39;:&#39;total deaths past&#39;, &#39;total tests current&#39;:&#39;total tests past&#39;}) kerry.columns=map(str.lower, kerry.columns) . . #collapse #CLEANING THE RTLIVE DATA today=&#39;2020-08-03&#39; rtCleaned = rt[rt[&#39;date&#39;]==today] rtColumns = [&#39;date&#39;, &#39;region&#39;, &#39;mean&#39;] rtCleaned = rtCleaned[rtColumns] rtCleaned = rtCleaned.rename(columns = {&#39;region&#39;:&#39;state&#39;}) rtCleaned = rtCleaned.sort_values(&#39;state&#39;, ascending=True) . . #collapse #CLEANING THE DAILY COVID DATA dateRange=&#39;20200803&#39; dailyColumns = [&#39;date&#39;, &#39;state&#39;, &#39;death&#39;, &#39;positiveIncrease&#39;, &#39;totalTestResultsIncrease&#39;, &#39;deathIncrease&#39;] dailyData = da[dailyColumns] dailyData = dailyData.sort_values(&#39;state&#39;, ascending=True) dailyCleaned = dailyData[dailyData[&#39;date&#39;].astype(str)==dateRange] . . #collapse #MERGING THE DATASETS TOGETHER mergef=pd.merge(kerry, rtCleaned, on=&#39;state&#39;) merget=pd.merge(mergef, dailyCleaned, on=&#39;state&#39;) merger=pd.merge(merget, newerCol, on=&#39;state&#39;) . . #SHOW THE LOCATIONS FOR CLIENT kerry . county state population . 0 Montgomery | AL† | 4,903,185 | . 1 Hot Springs | AR† | 3,017,804 | . 2 Commerce nMecca nMontebello nUnion City | CA* | 39,512,223 | . 3 Lakeland, Plant City | FL* | 21,477,737 | . 4 Banks, GA nCalhoun, GA nRome, GA Savannah | GA | 10,617,423 | . 5 Fredricksburg, IA nVinton, IA | IA | 3,155,070 | . 6 Carol Stream, IL nChicago, IL nElk Grove Villa... | IL | 12,671,821 | . 7 Evansville, IN nWest Bend, IN | IN† | 6,732,219 | . 8 New Century, KS | KS | 2,913,314 | . 9 Baltimore, MD | MD | 6,045,680 | . 10 Portland, ME | ME | 1,344,212 | . 11 Blue Earth, MN nOwatonna, MN nRochester, MN | MN | 5,639,632 | . 12 Affton, MO nGreenville, MO nNixa, MO nSpringfi... | MO | 6,137,428 | . 13 Vicksburg, MS | MS† | 2,976,149 | . 14 Clark, NJ nClark Savory, NJ | NJ† | 8,882,190 | . 15 North Rose, Norwich | NY | 19,453,561 | . 16 Byesville, OH | OH | 11,689,100 | . 17 Crossville, TN | TN | 6,829,174 | . 18 Forth Worth, TX | TX* | 28,995,881 | . 19 Harrisonburg, VA | VA | 8,535,519 | . 20 Seattle, WA nSummer, WA | WA† | 7,614,893 | . 21 Beloit, WI nJackson, WI nManitowoc, WI nOwen, ... | WI | 5,822,434 | . #SHOW CLIP OF THE RT DATA rtCleaned.head(3) . date state mean . 8000 2020-08-03 | AK | 1.045968 | . 3675 2020-08-03 | AL | 1.037615 | . 4948 2020-08-03 | AR | 1.032516 | . #SHOW CLIP OF THE DAILY DATA dailyCleaned.head(3) . date state death positiveIncrease totalTestResultsIncrease deathIncrease . 112 20200803 | AK | 25.0 | 80 | 2717 | 1 | . 113 20200803 | AL | 1633.0 | 1217 | 7981 | 6 | . 114 20200803 | AR | 475.0 | 1424 | 12819 | 17 | . #SHOW CLIP OF THE PAST DATA newerCol.head(3) . state social index past rt past test increase past tpr past weekly deaths past total deaths past total tests past . 0 AL | 22 | 1.111944 | 11546 | 21% | 142 | 1633 | 56092 | . 1 AR | 76 | 1.037065 | 5150 | 12% | 67 | 475 | 42509 | . 2 CA | 22 | 0.970088 | 54351 | 6% | 943 | 9388 | 888118 | . #SHOW THE MERGED DATA merger . county state population date_x mean date_y death positiveIncrease totalTestResultsIncrease deathIncrease social index past rt past test increase past tpr past weekly deaths past total deaths past total tests past . 0 Banks, GA nCalhoun, GA nRome, GA Savannah | GA | 10,617,423 | 2020-08-03 | 0.953591 | 20200803 | 3842.0 | 2258 | 21761 | 2 | 22 | 0.953783 | 24592 | 13% | 333 | 3842 | 193438 | . 1 Fredricksburg, IA nVinton, IA | IA | 3,155,070 | 2020-08-03 | 0.986369 | 20200803 | 882.0 | 349 | 2357 | 6 | 16 | 1.010162 | 3287 | 10% | 49 | 882 | 31630 | . 2 Carol Stream, IL nChicago, IL nElk Grove Villa... | IL | 12,671,821 | 2020-08-03 | 1.079520 | 20200803 | 7723.0 | 1298 | 28475 | 9 | 44 | 1.092876 | 10625 | 4% | 115 | 7723 | 264702 | . 3 New Century, KS | KS | 2,913,314 | 2020-08-03 | 1.062584 | 20200803 | 365.0 | 1064 | 9332 | 7 | 46 | 1.071201 | 2704 | 12% | 30 | 365 | 22903 | . 4 Baltimore, MD | MD | 6,045,680 | 2020-08-03 | 1.031896 | 20200803 | 3523.0 | 870 | 15851 | 8 | 45 | 1.047616 | 6268 | 6% | 76 | 3523 | 105119 | . 5 Portland, ME | ME | 1,344,212 | 2020-08-03 | 0.935590 | 20200803 | 124.0 | 12 | 2071 | 1 | 45 | 0.975832 | 138 | 1% | 5 | 124 | 16704 | . 6 Blue Earth, MN nOwatonna, MN nRochester, MN | MN | 5,639,632 | 2020-08-03 | 1.103790 | 20200803 | 1656.0 | 613 | 13663 | 2 | 45 | 1.074376 | 4757 | -5% | 40 | 1656 | -98722 | . 7 Affton, MO nGreenville, MO nNixa, MO nSpringfi... | MO | 6,137,428 | 2020-08-03 | 1.166522 | 20200803 | 1255.0 | 1047 | 10481 | 2 | 1 | 1.220294 | 9837 | 14% | 54 | 1255 | 71044 | . 8 North Rose, Norwich | NY | 19,453,561 | 2020-08-03 | 0.963728 | 20200803 | 25172.0 | 545 | 51839 | 2 | 52 | 0.941746 | 4499 | 1% | 55 | 25172 | 455625 | . 9 Byesville, OH | OH | 11,689,100 | 2020-08-03 | 0.941189 | 20200803 | 3539.0 | 932 | 17997 | 10 | 64 | 0.918456 | 8786 | 5% | 195 | 3539 | 191445 | . 10 Crossville, TN | TN | 6,829,174 | 2020-08-03 | 0.986842 | 20200803 | 1092.0 | 1009 | 12235 | 19 | 15 | 0.980140 | 14147 | 9% | 114 | 1092 | 163081 | . 11 Harrisonburg, VA | VA | 8,535,519 | 2020-08-03 | 1.096200 | 20200803 | 2218.0 | 1324 | 15082 | 0 | 85 | 1.023291 | 7034 | 6% | 136 | 2218 | 115897 | . 12 Beloit, WI nJackson, WI nManitowoc, WI nOwen, ... | WI | 5,822,434 | 2020-08-03 | 0.918711 | 20200803 | 956.0 | 411 | 7180 | 1 | 26 | 0.985503 | 6120 | 7% | 56 | 1596 | 93650 | .",
            "url": "https://richcastro82.github.io/Matrix/2020/08/05/Matrix-New.html",
            "relUrl": "/2020/08/05/Matrix-New.html",
            "date": " • Aug 5, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Title",
            "content": "toc: false | comments: true | image: images/US_case_count.png | hide: false | search_exclude: false | categories: geospatial | author: Shantam Raj | badges: true | . Today we will make our first geospatial map from the article Coronavirus in the U.S.: Latest Map and Case Count which looks like the folowing - . import geopandas as gpd import altair as alt import pandas as pd alt.renderers.set_embed_options(actions=False) # Shapefiles from us census state_shpfile = &#39;./shapes/cb_2019_us_state_20m&#39; county_shpfile = &#39;./shapes/cb_2019_us_county_20m&#39; states = gpd.read_file(state_shpfile) county = gpd.read_file(county_shpfile) # Adding longitude and latitude in state data states[&#39;lon&#39;] = states[&#39;geometry&#39;].centroid.x states[&#39;lat&#39;] = states[&#39;geometry&#39;].centroid.y # Adding longitude and latitude in state data county[&#39;lon&#39;] = county[&#39;geometry&#39;].centroid.x county[&#39;lat&#39;] = county[&#39;geometry&#39;].centroid.y . # NYT dataset county_url = &#39;https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv&#39; cdf = pd.read_csv(county_url) . cdf[cdf[&#39;fips&#39;].isnull() == True].groupby([&#39;county&#39;]).sum() . fips cases deaths . county . Joplin 0.0 | 329 | 4 | . Kansas City 0.0 | 85094 | 1700 | . New York City 0.0 | 15615980 | 1528538 | . Unknown 0.0 | 885104 | 41064 | . #hide_output cdf[cdf[&#39;fips&#39;].isnull() == True].groupby([&#39;county&#39;, &#39;state&#39;]).sum() . NYT publishes the data for New York City in a different way by combining the results of the 5 boroughs that comprise it. So we will combine them too and add a new row in the dataset with a custom fips of 1. Let&#39;s start by making this change in the raw NYT dataset itself. . cdf.loc[cdf[&#39;county&#39;] == &#39;New York City&#39;,&#39;fips&#39;] = 1 cdf[cdf[&#39;county&#39;] == &#39;New York City&#39;] . date county state fips cases deaths . 416 2020-03-01 | New York City | New York | 1.0 | 1 | 0 | . 448 2020-03-02 | New York City | New York | 1.0 | 1 | 0 | . 482 2020-03-03 | New York City | New York | 1.0 | 2 | 0 | . 518 2020-03-04 | New York City | New York | 1.0 | 2 | 0 | . 565 2020-03-05 | New York City | New York | 1.0 | 4 | 0 | . ... ... | ... | ... | ... | ... | ... | . 262876 2020-06-23 | New York City | New York | 1.0 | 217803 | 21817 | . 265930 2020-06-24 | New York City | New York | 1.0 | 218089 | 21838 | . 268988 2020-06-25 | New York City | New York | 1.0 | 218429 | 21856 | . 272054 2020-06-26 | New York City | New York | 1.0 | 218799 | 21893 | . 275123 2020-06-27 | New York City | New York | 1.0 | 219157 | 21913 | . 119 rows × 6 columns . # collapse latest_cases = cdf.groupby(&#39;fips&#39;, as_index=False).agg({&#39;county&#39;: &#39;last&#39;, &#39;date&#39;: &#39;last&#39;, &#39;state&#39;: &#39;last&#39;, &#39;cases&#39;: &#39;last&#39;, &#39;deaths&#39;: &#39;last&#39;}) latest_cases . . fips county date state cases deaths . 0 1.0 | New York City | 2020-06-27 | New York | 219157 | 21913 | . 1 1001.0 | Autauga | 2020-06-27 | Alabama | 498 | 12 | . 2 1003.0 | Baldwin | 2020-06-27 | Alabama | 555 | 10 | . 3 1005.0 | Barbour | 2020-06-27 | Alabama | 317 | 1 | . 4 1007.0 | Bibb | 2020-06-27 | Alabama | 161 | 1 | . ... ... | ... | ... | ... | ... | ... | . 3038 56037.0 | Sweetwater | 2020-06-27 | Wyoming | 81 | 0 | . 3039 56039.0 | Teton | 2020-06-27 | Wyoming | 119 | 1 | . 3040 56041.0 | Uinta | 2020-06-27 | Wyoming | 167 | 0 | . 3041 56043.0 | Washakie | 2020-06-27 | Wyoming | 38 | 5 | . 3042 56045.0 | Weston | 2020-06-27 | Wyoming | 1 | 0 | . 3043 rows × 6 columns . Now we have to make the changes in our shapefile too. For that we need to **dissolve** the 5 buroughs into one single geospatial entity. . #New York City fips = 36005&#39;, &#39;36047&#39;, &#39;36061&#39;, &#39;36081&#39;, &#39;36085 which corresponds to New York, Kings, Queens, Bronx and Richmond spatial_nyc = county[county[&#39;GEOID&#39;].isin([&#39;36005&#39;, &#39;36047&#39;, &#39;36061&#39;, &#39;36081&#39;, &#39;36085&#39;])] . combined_nyc = spatial_nyc.dissolve(by=&#39;STATEFP&#39;) alt.Chart(spatial_nyc).mark_geoshape(stroke=&#39;white&#39;, strokeWidth=3).encode() | alt.Chart(combined_nyc).mark_geoshape(stroke=&#39;white&#39;, strokeWidth=3).encode() . agg_nyc_data = spatial_nyc.dissolve(by=&#39;STATEFP&#39;).reset_index() agg_nyc_data[&#39;GEOID&#39;] = &#39;1&#39; agg_nyc_data[&#39;fips&#39;] = 1 agg_nyc_data[&#39;lon&#39;] = agg_nyc_data[&#39;geometry&#39;].centroid.x agg_nyc_data[&#39;lat&#39;] = agg_nyc_data[&#39;geometry&#39;].centroid.y . agg_nyc_data . STATEFP geometry COUNTYFP COUNTYNS AFFGEOID GEOID NAME LSAD ALAND AWATER lon lat fips . 0 36 | POLYGON ((-74.24921 40.54506, -74.21684 40.558... | 061 | 00974129 | 0500000US36061 | 1 | New York | 06 | 58690498 | 28541727 | -73.927011 | 40.695278 | 1 | . # hide_output county_nyc = gpd.GeoDataFrame(pd.concat([county, agg_nyc_data], ignore_index=True)) county_nyc[&#39;fips&#39;] = county_nyc[&#39;GEOID&#39;] county_nyc[&#39;fips&#39;] = county_nyc[&#39;fips&#39;].astype(&#39;int&#39;) county_nyc # generate FIPS in the shapefile itself by combining STATEFP and COUNTYFP #county2[&#39;STATEFP&#39;] + county2[&#39;COUNTYFP&#39;] #latest_cases[&#39;fips&#39;] = latest_cases[&#39;fips&#39;].astype(&#39;int&#39;) . latest_cases[&#39;fips&#39;].isin(county_nyc[&#39;fips&#39;]).value_counts() . True 3043 Name: fips, dtype: int64 . latest_cases[latest_cases[&#39;county&#39;] == &#39;New York City&#39;] . fips county date state cases deaths . 0 1.0 | New York City | 2020-06-27 | New York | 219157 | 21913 | . county_nyc[county_nyc[&#39;fips&#39;] == 1] . STATEFP COUNTYFP COUNTYNS AFFGEOID GEOID NAME LSAD ALAND AWATER geometry lon lat fips . 3220 36 | 061 | 00974129 | 0500000US36061 | 1 | New York | 06 | 58690498 | 28541727 | POLYGON ((-74.24921 40.54506, -74.21684 40.558... | -73.927011 | 40.695278 | 1 | . # collapse latest_cases_w_fips = county_nyc.merge(latest_cases, how=&#39;left&#39;, on=&#39;fips&#39;) circle_selection = alt.selection_single(on=&#39;mouseover&#39;, empty=&#39;none&#39;) circles = alt.Chart(latest_cases_w_fips).mark_point(fillOpacity=0.2, fill=&#39;red&#39;, strokeOpacity=1, color=&#39;red&#39;, strokeWidth=1).encode( latitude=&quot;lat:Q&quot;, longitude=&quot;lon:Q&quot;, size=alt.Size(&#39;cases:Q&#39;, scale=alt.Scale(domain=[0, 7000],),legend=alt.Legend(title=&quot;Cases&quot;)), tooltip=[&#39;county:N&#39;, &#39;cases:Q&#39;, &#39;deaths:Q&#39;], color = alt.condition(circle_selection, alt.value(&#39;black&#39;), alt.value(&#39;red&#39;)) ).project( type=&#39;albersUsa&#39; ).properties( width=1000, height=700 ).add_selection( circle_selection ) state = alt.Chart(states).mark_geoshape(fill=&#39;#ededed&#39;, stroke=&#39;white&#39;).encode( ).project( type=&#39;albersUsa&#39; ) state_text = state.mark_text().transform_filter(alt.datum.NAME != &#39;Puerto Rico&#39;).encode( longitude=&#39;lon:Q&#39;, latitude=&#39;lat:Q&#39;, text=&#39;NAME&#39;, ).project( type=&#39;albersUsa&#39; ) . . (state+circles+state_text).configure_view(strokeWidth=0) .",
            "url": "https://richcastro82.github.io/Matrix/2020/06/12/US-case-counts-geospatial.html",
            "relUrl": "/2020/06/12/US-case-counts-geospatial.html",
            "date": " • Jun 12, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://richcastro82.github.io/Matrix/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://richcastro82.github.io/Matrix/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}